
++++++ igsr_variant Documentation ++++++

edited@2018/01/24

please direct all questions to ling.wu@myhealthgene.com

1. brief introduction of sub-files
.
├── database                        ---- contains the all version of collection 
├── datamap                         ---- contains the map relation between igsr_variant with other db
├── dataraw                          ---- contains the raw data from igsr ftp site
├── datastore                        ---- contains the standard data convert from to  dataraw 
├── __init__.py                        ---- the inited  file of package
├── __init__.pyc                      ----the compiled file of  __init__.py
├── igsr_variant.log               ---- contains the database version,update date,model version
├── igsr_variant.py                ---- contains the main code of igsr_variant's process
├── igsr_variant.pyc              ----the compiled file of  igsr_variant.py
└── igsr_variant.readme       ---- model  introduction

2. description about igsr_variant.py

the main job of igsr_variant is to download,extract,standar,insert and update variant data from igsr ftp site

Functions
 
(1) downloadData(redownload = False)
    description : download the raw data from igsr FTP WebSite
    args:
        redownload ~ default False, check to see if exists an old edition before download
                               ~ if set to true, download directly with no check

(2) extractData(filepath,date)
    description : this function is set to distribute all filepath to parser to process
    args:
        filepath ~ the filepath to be parserd
        date        ~ the date of  data download

(3) updateData(insert=True)
    description :this function is set to update all file in log
    args:
        insert ~ default False,with no extract  after download data
                   ~ if set tp true, extract all after download

(4) selectDate(querykey,queryvalue):
    description : supply a interface to select data from database
    args:
        querykey    ~ the filed name 
        queryvalue ~ the field value

Class

(1) parser
    
    description: parser all raw file to extract content we need and insert to mongodb
    
    functions:

        a. getUrl(self)
            description:get the latest version and ftp host and ftp logdir of igsr variant
            args:

        b. getOne(self,igsr_variant_ftp_infos,igsr_variant_raw)
            description:download  one file under  a given remote dir 
            args:
                igsr_variant_ftp_infos ~ a specified ftp connection infos
                igsr_variant_raw ~ the directory to save download file

        c. variant_info(self,filepath,fileversion)
            description:  parser variant info files and  insert to mongdb
            args:
                filepaths ~ filepath of gene info files
                fileversion ~ the current version of igsr variant  file


(2) dbMap

    description: map igsr id to other db

    functions:

        a. dbID2hgncSymbol(self)
            description:create a mapping relation between Igsr ID with HGNC Symbol
            args:

                   
(3) dbFilter

    description:  filter part field of data in collections  in mongodb

    functions:

        a. gene_topic(self)
            description: filter parts of filed of specified doc for gene topic creation 
            args:          


Design  

(1) downloadData
  
    1. download ALL.wgs.phase**.vcf from ftb web site
    2. generate a log file in current  path

(2) extractData
    
    1. distribute filepaths for parser
    2. parser filepaths step by step
    3. backup all collections
        
(3) updateData
    
    1. load the log file
    2. get the latest updated version from remote site
    3. compare with current local version in log file
    4. if remote updated, download from ftp site and store raw data into /dataraw/,then create a log,else End

(4) parser
    
    1. connect mongodb
    2. before create a col ,delete the col with the same name or the old edition
    3. create a col ,and create a index in col with the main identifier of this db model
    4. add a version doc in col head
    5. parser file content and insert data oneby one

(5) dbMap
    
    dbID2hgncSymbol
        1. connect mongodb
        2. get the map relation of RS ID  with hgnc_symbol
        3. map igsr id to hgnc symbol

(6) dbFilter



Usage: python igsr_variant.py  [OPTION]...[NAME]...

Download,extract,standar,insert and update data automatically

-h, --help                         :give this help
-a, --all                             :excute download,extract,standar and insert
-u, --update                     :update database
-f, --field  [filedname]    :select data from mongodb      

++++++ igsr_variant  Documentation ++++++

