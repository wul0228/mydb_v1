
++++++ gene Documentation ++++++

edited@2018/01/25

please direct all questions to ling.wu@myhealthgene.com

1. brief introduction of sub-files
.
├── gene.py                ----contains the main code of ncbi_gene's process
├── gene.pyc              ----the compiled file of  gene.py 
├── gene_config.py    ----the config args of gene topic
├── gene_config.pyc  ----the compiled file of  gene_config
├── gene_share.py     ----the s
├── gene_share.pyc
├── __init__.py
├── __init__.pyc
├── _mongodb
└── gene.readme

2. description about gene.py

the main job of gene is to download,extract,standar,insert and update gene data from ncbi ftp site

Functions
 
(1) downloadData(redownload = False)
    description : download the raw data from ftp FTP WebSite
    args:
        redownload ~ default False, check to see if exists an old edition before download
                               ~ if set to true, download directly with no check

(2) extractData(filepaths,date)
    description : this function is set to distribute all filepath to parser to process
    args:
        filepaths ~ all filepaths to be parserd
        date        ~ the date of  data download

(3) updateData(insert=True)
    description :this function is set to update all file in log
    args:
        insert ~ default False,with no extract  after download data
                   ~ if set tp true, extract all after download

(4) selectDate(querykey,queryvalue):
    description : supply a interface to select data from database
    args:
        querykey    ~ the filed name 
        queryvalue ~ the field value

Class

(1) parser
    
    description: parser all raw file to extract content we need and insert to mongodb
    
    functions:

        a. getOne(self,gene_ftp_infos,filename,rawdir)
            description:download  one file under  a given remote dir 
            args:
                gene_ftp_infos ~ a specified ftp cursor  
                filename ~ the name of file need download
                rawdir ~ the directory to save download file

        b. gene_info(self,filepaths)
            description:  parser gene info files and  insert to mongdb
            args:
                filepaths ~ filepath of gene info files

        c. gene_group(self,filepaths)
            description:parser gene group files and  insert to mongdb
            args:
                filepaths ~ filepath of gene group files

        d. gene_neighbors(self,filepaths)
            description:parser gene neighbors files and  insert to mongdb
            args:
                filepaths ~ filepath of gene neighbors files

        e. gene_pubmed(self,filepaths)
            description:parser gene pubmed files and  insert to mongdb
            args:
                filepaths ~ filepath of gene pubmed files

        f.  gene_expression(self,filepaths) 
            description:parser gene expression files and  insert to mongdb
            args:
                filepaths ~ filepath of gene expression files
                
        g. gene_refseq(self,filepaths)
            description:parser gene refseq files and  insert to mongdb
            args:
                filepaths ~ filepath of gene refseq files
                
        h. gene_summary(self,filepaths)
            description:parser gene summary files and  insert to mongdb
            args:
                filepaths ~ filepath of gene summary files

(2) dbMap

    description: map ncbi gene id to other db

    functions:

        a. dbID2hgncSymbol(self)
            description:create a mapping relation between NCBI GeneID with HGNC Symbol
            args:

                   
(3) dbFilter

    description:  filter part field of data in collections  in mongodb

    functions:

        a. gene(self)
            description: filter parts of filed of specified doc for gene topic creation 
            args:          


Design  

(1) downloadData
  
    1. download gene_group ,gene_neibors, gene_pubmed ,gene_info
    2. download gene_expression (get filename→ download )
    3. download refseq filenames (get filename→ download )
    4. generate a log file in current  path
    5. generate a record (.files) file in model database directory

(2) extractData
    
    1. distribute filepaths for parser
    2. parser filepaths step by step
    3. backup all collections
        
(3) updateData
    
    1. load the log file
    2. get the latest updated version from remote site
    3. compare with current local version in log file
    4. if remote updated, download from ftp site and store raw data into /dataraw/,then create a log,else End

(4) parser
    
    1. connect mongodb
    2. before create a col ,delete the col with the same name or the old edition
    3. create a col ,and create a index in col with the main identifier of this db model
    4. add a version doc in col head
    5. parser file content and insert data oneby one

(5) dbMap
    
    dbID2hgncSymbol
        1. connect mongodb
        2. get the map relation of entrez_id with hgnc_symbol
        3. map ncbi gene id to hgnc symbol

(6) dbFilter



Usage: python gene.py  [OPTION]...[NAME]...

Download,extract,standar,insert and update data automatically

-h, --help                         :give this help
-a, --all                             :excute download,extract,standar and insert
-u, --update                     :update database
-f, --field  [filedname]    :select data from mongodb      

++++++ gene  Documentation ++++++

