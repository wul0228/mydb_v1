
++++++ dgidb_drug Documentation ++++++

edited@2018/01/24

please direct all questions to ling.wu@myhealthgene.com

1. brief introduction of sub-files
.
├── database                 ---- contains the all version of collection 
├── datamap                  ---- contains the map relation between dgidb_drug with other db
├── dataraw                   ---- contains the raw data from dgidb web site
├── datastore                 ---- contains the standard data convert from to  dataraw 
├── __init__.py                ---- the inited  file of package
├── __init__.pyc               ----the compiled file of  __init__.py
├── dgidb_drug.log          ---- contains the database version,update date,model version
├── dgidb_drug.py           ---- contains the main code of dgidb_drug's process
├── dgidb_drug.pyc          ----the compiled file of  dgidb_drug.py
└── dgidb_drug.readme  ---- model  introduction

2. description about dgidb_drug.py

the main job of dgidb_drug is to download,extract,standar,insert and update drug data from dgidb web site

Functions
 
(1) downloadData(redownload = False)
    description : download the raw data from web  website
    args:
        redownload ~ default False, check to see if exists an old edition before download
                               ~ if set to true, download directly with no check

(2) extractData(filepaths,date)
    description : this function is set to distribute all filepath to parser to process
    args:
        filepaths ~ all filepaths to be parserd
        date        ~ the date of  data download

(3) updateData(insert=True)
    description :this function is set to update all file in log
    args:
        insert ~ default False,with no extract  after download data
                   ~ if set tp true, extract all after download

(4) selectDate(querykey,queryvalue):
    description : supply a interface to select data from database
    args:
        querykey    ~ the filed name 
        queryvalue ~ the field value

Class

(1) parser
    
    description: parser all raw file to extract content we need and insert to mongodb
    
    functions:

        a. getMt(self)
            description: get the latest version of dgidb drug api version from dgidb api web site

        b. getAPI(self)
            description: get dgidb drug and gene api link

        c. getOne(self,url,page,per_page,name,mt,rawdir)
            description:download drug and gene json file from api  for a given url
            args:
                page ~ the page number of  json  file from api
                per_page ~ the number of record in one page
                name ~  infos belong to   dgidb_drug or dgidb_interaction
                mt ~ the current version of dgidb 
                rawdir ~ the directory to store download file

        d. drug_info(self,filepaths)
            description:parser drug info files and  insert to mongdb
            args:
                filepaths ~ filepath of drug info files

        e. drug_gene(self,filepaths)
            description:parser drug gene files and  insert to mongdb
            args:
                filepaths ~ filepath of drug gene files

(2) dbMap

    description: map dgidb drug id to other db

    functions:

        a. dbID2hgncSymbol(self)
            description:create a mapping relation between DGIDB DRUG ID with HGNC Symbol
            args:

                   
(3) dbFilter

    description:  filter part field of data in collections  in mongodb

    functions:

        a. gene_topic(self)
            description: filter parts of filed of specified doc for gene topic creation 
            args:          


Design  

(1) downloadData
  
    1. get dgidb drug api version
    2. get dgidb drug and gene api link
    3. download drug and interaction  from api 
    4. generate a log file in current  path
    5. generate a record (.files) file in model database directory

(2) extractData
    
    1. distribute filepaths for parser
    2. parser filepaths step by step
    3. backup all collections
        
(3) updateData
    
    1. load the log file
    2. get the latest updated version from remote site
    3. compare with current local version in log file
    4. if remote updated, download from web site and store raw data into /dataraw/,then create a log,else End

(4) parser
    
    1. connect mongodb
    2. before create a col ,delete the col with the same name or the old edition
    3. create a col ,and create a index in col with the main identifier of this db model
    4. add a version doc in col head
    5. parser file content and insert data oneby one

(5) dbMap
    
    dbID2hgncSymbol
        1. connect mongodb
        2. get the map relation of entrez_id with hgnc_symbol
        3. map dgidb drug id to hgnc symbol

(6) dbFilter



Usage: python dgidb_drug.py  [OPTION]...[NAME]...

Download,extract,standar,insert and update data automatically

-h, --help                         :give this help
-a, --all                             :excute download,extract,standar and insert
-u, --update                     :update database
-f, --field  [filedname]    :select data from mongodb      

++++++ dgidb_drug  Documentation ++++++

