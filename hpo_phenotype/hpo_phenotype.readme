
++++++ hpo_phenotype Documentation ++++++

edited@2018/01/24

please direct all questions to ling.wu@myhealthphenotype.com

1. brief introduction of sub-files
.
├── database                          ---- contains the all version of collection 
├── datamap                           ---- contains the map relation between hpo_phenotype with other db
├── dataraw                            ---- contains the raw data from hpo web site
├── datastore                          ---- contains the standard data convert from to  dataraw 
├── __init__.py                         ---- the inited  file of package
├── __init__.pyc                        ----the compiled file of  __init__.py
├── hpo_phenotype.log          ---- contains the database version,update date,model version
├── hpo_phenotype.py           ---- contains the main code of hpo_phenotype's process
├── hpo_phenotype.pyc          ----the compiled file of  hpo_phenotype.py
└── hpo_phenotype.readme  ---- model  introduction

2. description about hpo_phenotype.py

the main job of hpo_phenotype is to download,extract,standar,insert and update phenotype data from hpo web site

Functions
 
(1) downloadData(redownload = False)
    description : download the raw data from website
    args:
        redownload ~ default False, check to see if exists an old edition before download
                               ~ if set to true, download directly with no check

(2) extractData(filepaths,date)
    description : this function is set to distribute all filepath to parser to process
    args:
        filepaths ~ all filepaths to be parserd
        date        ~ the date of  data download

(3) updateData(insert=True)
    description :this function is set to update all file in log
    args:
        insert ~ default False,with no extract  after download data
                   ~ if set tp true, extract all after download

(4) selectDate(querykey,queryvalue):
    description : supply a interface to select data from database
    args:
        querykey    ~ the filed name 
        queryvalue ~ the field value

Class

(1) parser
    
    description: parser all raw file to extract content we need and insert to mongodb
    
    functions:

        a.  getMt(self)
            description: get the latest version of raw file from hpo web site
            args:

        a.  getAll(self,urls,mt,rawdir)
            description: get the latest version of raw file from hpo web site
            args:
                urls ~ the urls of download web page of files
                mt ~ the latest version of hpo raw file
                rawdir ~ the raw directoty to store download file

        b. phenotype_info(self,filepaths)
            description:  parser phenotype info files and  insert to mongdb
            args:
                filepaths ~ filepath of phenotype info files

        c. phenotype_gene(self,filepaths)
            description:parser phenotype gene files and  insert to mongdb
            args:
                filepaths ~ filepath of phenotype gene files

        d. phenotype_disease(self,filepaths)
            description:parser phenotype disease files and  insert to mongdb
            args:
                filepaths ~ filepath of phenotype disease files

        e. phenotype_disgene(self,filepaths)
            description:parser phenotype disgene files and  insert to mongdb
            args:
                filepaths ~ filepath of phenotype disgene files

(2) dbMap

    description: map hpo phenotype id to other db

    functions:

        a. dbID2hgncSymbol(self)
            description:create a mapping relation between HPO ID with HGNC Symbol
            args:

                   
(3) dbFilter

    description:  filter part field of data in collections  in mongodb

    functions:

        a. gen_topic(self)
            description: filter parts of filed of specified doc for gene topic creation 
            args:          


Design  

(1) downloadData
  
    1. get the latest version of  raw file
    2. download raw files
    3. generate a log file in current  path
    4. generate a record (.files) file in model database directory

(2) extractData
    
    1. distribute filepaths for parser
    2. parser filepaths step by step
    3. backup all collections
        
(3) updateData
    
    1. load the log file
    2. get the latest updated version from remote site
    3. compare with current local version in log file
    4. if remote updated, download from web site and store raw data into /dataraw/,then create a log,else End

(4) parser
    
    1. connect mongodb
    2. before create a col ,delete the col with the same name or the old edition
    3. create a col ,and create a index in col with the main identifier of this db model
    4. add a version doc in col head
    5. parser file content and insert data oneby one

(5) dbMap
    
    dbID2hgncSymbol
        1. connect mongodb
        2. get the map relation of Gene-ID with hgnc_symbol
        3. map hpo phenotype id to hgnc symbol

(6) dbFilter



Usage: python hpo_phenotype.py  [OPTION]...[NAME]...

Download,extract,standar,insert and update data automatically

-h, --help                         :give this help
-a, --all                             :excute download,extract,standar and insert
-u, --update                     :update database
-f, --field  [filedname]    :select data from mongodb      

++++++ hpo_phenotype  Documentation ++++++

